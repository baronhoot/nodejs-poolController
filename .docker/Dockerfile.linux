# Use a Linux-based image as the build stage
FROM node:lts-alpine AS build

# Install necessary build dependencies
RUN apk add --no-cache make gcc g++ python3 linux-headers udev tzdata

# Set the working directory for the first application
WORKDIR /app/tagyoureit/nodejs-poolcontroller

# Copy package.json and package-lock.json files for the first application
COPY package*.json ./
COPY defaultConfig.json config.json

# Install dependencies for the first application
RUN npm ci

# Copy the rest of the application files for the first application
COPY . .

# Build the first application
RUN npm run build

# Install production dependencies for the first application
RUN npm ci --omit=dev

# Define the entrypoint for the first application
ENTRYPOINT ["node", "dist/app.js"]

# Second stage for the production image
FROM node:lts-alpine as prod

# Install git
RUN apk add git

# Create the app directory and set ownership
RUN mkdir /app && chown node:node /app

# Set the working directory for the second application
WORKDIR /app/rstrouse/nodejs-poolcontroller-dashpanel

# Copy built application from the build stage for the second application
COPY --from=build --chown=node:node /app .

# Install dependencies for the second application
RUN npm ci

# Build the second application
RUN npm run build

# Define the entrypoint for the second application
ENTRYPOINT ["node", "dist/app.js"]
